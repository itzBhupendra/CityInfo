using System;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

public class ClientCalls
{
    private readonly HttpClient _httpClient;

    public ClientCalls()
    {
        _httpClient = new HttpClient();
    }

    public async Task<ApiResponse<T>> HttpGetAsync<T>(string url)
    {
        try
        {
            HttpResponseMessage response = await _httpClient.GetAsync(url);
            string responseData = await response.Content.ReadAsStringAsync();

            if (response.IsSuccessStatusCode)
            {
                T data = JsonConvert.DeserializeObject<T>(responseData);
                return new ApiResponse<T>(data, response.StatusCode);
            }
            else
            {
                return new ApiResponse<T>(default, response.StatusCode, responseData);
            }
        }
        catch (HttpRequestException e)
        {
            throw new Exception("HTTP GET request failed", e);
        }
    }

    public async Task<ApiResponse<TResponse>> HttpPostAsync<TRequest, TResponse>(string url, TRequest data)
    {
        try
        {
            string jsonData = JsonConvert.SerializeObject(data);
            StringContent content = new StringContent(jsonData, Encoding.UTF8, "application/json");
            HttpResponseMessage response = await _httpClient.PostAsync(url, content);
            string responseData = await response.Content.ReadAsStringAsync();

            if (response.IsSuccessStatusCode)
            {
                TResponse result = JsonConvert.DeserializeObject<TResponse>(responseData);
                return new ApiResponse<TResponse>(result, response.StatusCode);
            }
            else
            {
                return new ApiResponse<TResponse>(default, response.StatusCode, responseData);
            }
        }
        catch (HttpRequestException e)
        {
            throw new Exception("HTTP POST request failed", e);
        }
    }
}

public class ApiResponse<T>
{
    public T Data { get; set; }
    public bool IsSuccess { get; set; }
    public string Error { get; set; }
    public System.Net.HttpStatusCode StatusCode { get; set; }

    public ApiResponse(T data, System.Net.HttpStatusCode statusCode, string error = null)
    {
        Data = data;
        StatusCode = statusCode;
        IsSuccess = statusCode == System.Net.HttpStatusCode.OK;
        Error = error;
    }
}
