using Microsoft.AspNetCore.Mvc.Testing;
using Moq;
using NUnit.Framework;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;

[TestFixture]
public class IntegrationTests
{
    private WebApplicationFactory<Program> _factory;

    [SetUp]
    public void SetUp()
    {
        _factory = new WebApplicationFactory<Program>();
    }

    [TearDown]
    public void TearDown()
    {
        _factory.Dispose();
    }

    [Test]
    public async Task ExternalServiceException_HandledByMiddleware()
    {
        // Arrange
        var mockDataAccessApi = new Mock<IDataAccessApi>();
        mockDataAccessApi.Setup(x => x.MethodThatThrowsException())
                         .Throws(new Exception("Simulated exception from data access API"));

        var client = _factory.WithWebHostBuilder(builder =>
        {
            builder.ConfigureServices(services =>
            {
                // Replace IDataAccessApi registration with the mocked instance
                services.AddSingleton(mockDataAccessApi.Object);
            });
        }).CreateClient();

        // Act
        var response = await client.GetAsync("/your-api-endpoint");

        // Assert
        Assert.AreEqual(HttpStatusCode.InternalServerError, response.StatusCode);
        // Add more assertions as needed
    }
}
