using System;
using System.ComponentModel.DataAnnotations;

public class AtLeastOnePropertyRequiredAttribute : ValidationAttribute
{
    private readonly string[] propertyNames;

    public AtLeastOnePropertyRequiredAttribute(params string[] propertyNames)
    {
        this.propertyNames = propertyNames;
    }

    protected override ValidationResult IsValid(object value, ValidationContext validationContext)
    {
        var instance = validationContext.ObjectInstance;
        var type = validationContext.ObjectType;

        foreach (var propertyName in propertyNames)
        {
            var propertyInfo = type.GetProperty(propertyName);
            if (propertyInfo == null)
                throw new ArgumentException($"Property '{propertyName}' not found on '{type}'");

            var propertyValue = propertyInfo.GetValue(instance);
            if (propertyValue != null && !string.IsNullOrWhiteSpace(propertyValue.ToString()))
                return ValidationResult.Success;
        }

        return new ValidationResult(ErrorMessage ?? "At least one property is required.");
    }
}
