using System;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.DependencyInjection;

class Program
{
    static void Main(string[] args)
    {
        CreateWebHostBuilder(args).Build().Run();
    }

    public static IWebHostBuilder CreateWebHostBuilder(string[] args) =>
        WebHost.CreateDefaultBuilder(args)
            .ConfigureServices(services =>
            {
                services.AddHttpClient();
            })
            .Configure(app =>
            {
                app.UseRouting();

                app.Use(async (context, next) =>
                {
                    // Retrieve Correlation ID from HTTP header
                    string correlationId = context.Request.Headers["Correlation-ID"];
                    if (string.IsNullOrEmpty(correlationId))
                    {
                        correlationId = Guid.NewGuid().ToString();
                        context.Request.Headers.Add("Correlation-ID", correlationId);
                    }

                    // Log Correlation ID
                    Console.WriteLine($"Service 2 received request with Correlation ID: {correlationId}");

                    await next();
                });

                app.UseEndpoints(endpoints =>
                {
                    endpoints.MapGet("/", async context =>
                    {
                        await PassCorrelationIdToService3(context);
                        await context.Response.WriteAsync("Service 2 endpoint reached successfully");
                    });
                });
            });

    static async Task PassCorrelationIdToService3(HttpContext context)
    {
        string correlationId = context.Request.Headers["Correlation-ID"];

        var httpClientFactory = context.RequestServices.GetRequiredService<IHttpClientFactory>();
        var client = httpClientFactory.CreateClient();

        client.DefaultRequestHeaders.Add("Correlation-ID", correlationId);
        var response = await client.GetAsync("http://service3endpoint");
        response.EnsureSuccessStatusCode();

        Console.WriteLine($"Correlation ID passed to Service 3: {correlationId}");
    }
}
