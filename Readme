using Microsoft.Extensions.DependencyInjection;
using NUnit.Framework;
using Moq;
using System.Threading.Tasks;

// Interface representing the API client
public interface IApiClient
{
    Task<string> GetDataFromApi();
}

// Class implementing the API client interface
public class ApiClient : IApiClient
{
    public async Task<string> GetDataFromApi()
    {
        // Actual API call logic would be here
        // For testing purposes, this example returns a hardcoded string
        return "Real data from API";
    }
}

// Example class that uses the API client
public class ClassThatUsesApiClient
{
    private readonly IApiClient _apiClient;

    public ClassThatUsesApiClient(IApiClient apiClient)
    {
        _apiClient = apiClient;
    }

    public async Task<string> ParentFunction()
    {
        // The parent function that internally calls GetDataFromApi()
        var data = await _apiClient.GetDataFromApi(); // API call made here
        // Perform some processing on the data...
        return data;
    }
}

// Test Fixture
[TestFixture]
public class ApiTests
{
    [Test]
    public async Task Test_ParentFunction()
    {
        // Create a service collection and register the IApiClient with a mocked implementation
        var services = new ServiceCollection();
        services.AddTransient<IApiClient>(_ => GetMockedApiClient());

        // Build the service provider
        var serviceProvider = services.BuildServiceProvider();

        // Resolve the ClassThatUsesApiClient from the service provider
        var classUnderTest = serviceProvider.GetRequiredService<ClassThatUsesApiClient>();

        // Act - Call the parent function that internally uses the API client
        var result = await classUnderTest.ParentFunction();

        // Assert - Verify the result
        Assert.AreEqual("Fake data from API", result);
    }

    private IApiClient GetMockedApiClient()
    {
        var apiClientMock = new Mock<IApiClient>();
        apiClientMock.Setup(client => client.GetDataFromApi())
                     .ReturnsAsync("Fake data from API");
        return apiClientMock.Object;
    }
}
