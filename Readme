Imports System.Threading

Public Class Form1
    ' Create a delegate to update the RichTextBox from another thread
    Private Delegate Sub UpdateRichTextBoxDelegate(ByVal text As String)

    ' Event handler for the events you want to receive
    Private Sub YourEventHandler(ByVal sender As Object, ByVal e As EventArgs)
        ' Process your event here
        Dim eventData As String = "Received event: " & DateTime.Now.ToString() & vbCrLf

        ' Invoke the UI update using a delegate to ensure thread safety
        UpdateRichTextBox(eventData)
    End Sub

    ' Method to update the RichTextBox from another thread
    Private Sub UpdateRichTextBox(ByVal text As String)
        If Me.InvokeRequired Then
            ' If called from a different thread, invoke the delegate
            Dim d As New UpdateRichTextBoxDelegate(AddressOf UpdateRichTextBox)
            Me.Invoke(d, New Object() {text})
        Else
            ' If called from the UI thread, update the RichTextBox
            RichTextBox1.AppendText(text)
        End If
    End Sub

    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        ' Subscribe to the event you want to receive
        AddHandler YourEvent, AddressOf YourEventHandler

        ' Start a separate thread to simulate events being raised
        Dim eventThread As New Thread(AddressOf SimulateEvents)
        eventThread.Start()
    End Sub

    ' Method to simulate raising events
    Private Sub SimulateEvents()
        ' Simulate events being raised
        For i As Integer = 0 To 10
            Thread.Sleep(1000) ' Simulate some work
            RaiseEvent YourEvent(Me, EventArgs.Empty)
        Next
    End Sub

    ' Define the event you want to receive
    Private Event YourEvent As EventHandler
End Class
