<Window x:Class="LogViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:LogViewer.ViewModels"
        Title="Log Viewer" Height="450" Width="800">
    <Window.DataContext>
        <local:MainViewModel />
    </Window.DataContext>

    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Left Panel: Correlation IDs -->
        <StackPanel Grid.Row="0" Grid.Column="0" Margin="0,0,10,0" Background="LightGray">
            <TextBlock Text="Correlation IDs" FontSize="16" Margin="10" />
            <ListBox ItemsSource="{Binding CorrelationIds}"
                     SelectedItem="{Binding SelectedCorrelationId}"
                     DisplayMemberPath="CorrelationId"
                     Margin="10,0"
                     SelectionChanged="OnCorrelationIdSelected" />
        </StackPanel>

        <!-- Right Panel: Main Content -->
        <Grid Grid.Row="0" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Search Section -->
            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                <TextBox Width="300"
                         Margin="0,0,10,0"
                         PlaceholderText="Enter Correlation ID"
                         Text="{Binding CorrelationId, UpdateSourceTrigger=PropertyChanged}" />
                <Button Content="Search"
                        Width="100"
                        Command="{Binding FetchLogsCommand}" />
            </StackPanel>

            <!-- DataGrid Section -->
            <DataGrid Grid.Row="1"
                      ItemsSource="{Binding Logs}"
                      AutoGenerateColumns="False"
                      CanUserSortColumns="True"
                      Margin="0,10,0,0"
                      IsReadOnly="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Date Time"
                                        Binding="{Binding DateTime}"
                                        Width="150" />
                    <DataGridTextColumn Header="Log Level"
                                        Binding="{Binding LogLevel}"
                                        Width="100" />
                    <DataGridTextColumn Header="Correlation ID"
                                        Binding="{Binding CorrelationId}"
                                        Width="200" />
                    <DataGridTextColumn Header="Message"
                                        Binding="{Binding Message}"
                                        Width="*" />
                    <DataGridTextColumn Header="Log Folder Name"
                                        Binding="{Binding LogFolderName}"
                                        Width="150" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</Window>




using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Windows.Input;

namespace LogViewer.ViewModels
{
    public class MainViewModel : INotifyPropertyChanged
    {
        // Properties
        public ObservableCollection<CorrelationIdItem> CorrelationIds { get; set; }
        public ObservableCollection<LogEntry> Logs { get; set; }

        private string _correlationId;
        public string CorrelationId
        {
            get => _correlationId;
            set { _correlationId = value; OnPropertyChanged(); }
        }

        private CorrelationIdItem _selectedCorrelationId;
        public CorrelationIdItem SelectedCorrelationId
        {
            get => _selectedCorrelationId;
            set
            {
                _selectedCorrelationId = value;
                OnPropertyChanged();
                if (value != null) FetchLogsForCorrelationId(value.CorrelationId);
            }
        }

        // Commands
        public ICommand FetchLogsCommand { get; set; }

        // Constructor
        public MainViewModel()
        {
            CorrelationIds = new ObservableCollection<CorrelationIdItem>();
            Logs = new ObservableCollection<LogEntry>();
            FetchLogsCommand = new RelayCommand(async () => await FetchLogsForCorrelationId(CorrelationId));

            // Load initial Correlation IDs
            Task.Run(LoadCorrelationIds);
        }

        // Fetch correlation IDs with "SYSTEM_EXCEPTION"
        private async Task LoadCorrelationIds()
        {
            var ids = await ApiHelper.GetCorrelationIdsWithSystemException();
            App.Current.Dispatcher.Invoke(() =>
            {
                CorrelationIds.Clear();
                foreach (var id in ids)
                {
                    CorrelationIds.Add(id);
                }
            });
        }

        // Fetch logs for a specific correlation ID
        private async Task FetchLogsForCorrelationId(string correlationId)
        {
            var logs = await ApiHelper.GetLogs(correlationId);
            App.Current.Dispatcher.Invoke(() =>
            {
                Logs.Clear();
                foreach (var log in logs)
                {
                    Logs.Add(log);
                }
            });
        }

        // INotifyPropertyChanged Implementation
        public event PropertyChangedEventHandler PropertyChanged;
        protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    // Models
    public class CorrelationIdItem
    {
        public string CorrelationId { get; set; }
    }

    public class LogEntry
    {
        public string DateTime { get; set; }
        public string LogLevel { get; set; }
        public string CorrelationId { get; set; }
        public string Message { get; set; }
        public string LogFolderName { get; set; }
    }
}






