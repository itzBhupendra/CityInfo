class Event:
    def __init__(self, name):
        self.name = name
        self.handlers = []

    def add_handler(self, handler):
        self.handlers.append(handler)

    def remove_handler(self, handler):
        self.handlers.remove(handler)

    def fire(self, *args, **kwargs):
        for handler in self.handlers:
            handler(*args, **kwargs)


# Example usage:

# Define a custom event
custom_event = Event("CustomEvent")

# Define an event handler
def handle_custom_event(arg1, arg2):
    print(f"Handling CustomEvent with arguments {arg1} and {arg2}")

# Add the handler to the event
custom_event.add_handler(handle_custom_event)

# Trigger the event
custom_event.fire("Hello", "World")

# Remove the handler
custom_event.remove_handler(handle_custom_event)

# Trying to trigger the event again won't invoke the handler since it's removed
custom_event.fire("This", "Won't Trigger the Handler")
