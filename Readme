public class IntegrationTests
{
    private readonly TestServer _server;
    private readonly HttpClient _client;

    public IntegrationTests()
    {
        // Set up test server with your ASP.NET Core application startup class
        _server = new TestServer(new WebApplicationFactory<Startup>());
        _client = _server.CreateClient();
    }

    [Fact]
    public async Task MyAction_ReturnsInternalServerError_WhenServiceThrowsException()
    {
        // Arrange
        var mockService = new Mock<IMyService>();
        mockService.Setup(s => s.SomeMethod()).Throws(new Exception("Something went wrong"));
        // Use DI container to replace the actual service with the mock
        _server.Host
            .Services
            .GetRequiredService<IMyService>()
            .Returns(mockService.Object);

        // Act
        var response = await _client.GetAsync("/api/mycontroller/myaction");

        // Assert
        Assert.Equal(HttpStatusCode.InternalServerError, response.StatusCode);
        var content = await response.Content.ReadAsStringAsync();
        Assert.Contains("Something went wrong", content);
    }
}
