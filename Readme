# login.py
from cryptography.fernet import Fernet
import settings
import os

# Generate a secret key (only for the first time, store securely)
def generate_key():
    return Fernet.generate_key()

# Encrypt the credentials
def encrypt_credentials(key, username, password):
    cipher = Fernet(key)
    encrypted_username = cipher.encrypt(username.encode())
    encrypted_password = cipher.encrypt(password.encode())
    return encrypted_username, encrypted_password

# Save the credentials to settings.py
def save_credentials_to_settings(encrypted_username, encrypted_password):
    with open("settings.py", "r") as file:
        lines = file.readlines()

    with open("settings.py", "w") as file:
        for line in lines:
            if line.startswith("encrypted_username"):
                file.write(f"encrypted_username = {encrypted_username}\n")
            elif line.startswith("encrypted_password"):
                file.write(f"encrypted_password = {encrypted_password}\n")
            else:
                file.write(line)

# Login function
def login():
    username = input("Enter username: ")
    password = input("Enter password: ")

    if settings.key is None:
        print("No encryption key found. Generating a new one...")
        settings.key = generate_key()

    encrypted_username, encrypted_password = encrypt_credentials(settings.key, username, password)
    save_credentials_to_settings(encrypted_username, encrypted_password)

    print("Login successful. Credentials saved in encrypted form.")

if __name__ == "__main__":
    login()
