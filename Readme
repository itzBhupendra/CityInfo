using Microsoft.Extensions.DependencyInjection;
using System;

namespace LogViewer
{
    public static class Startup
    {
        public static IServiceProvider ConfigureServices()
        {
            var serviceCollection = new ServiceCollection();

            // Register ViewModels
            serviceCollection.AddSingleton<MainViewModel>();
            serviceCollection.AddTransient<LogDetailViewModel>();

            // Register Services (e.g. LogService)
            serviceCollection.AddSingleton<ILogService, LogService>();

            // Register other services, e.g., HTTP clients, repositories, etc.
            serviceCollection.AddHttpClient(); // For HTTP requests, if needed
            serviceCollection.AddSingleton<ICorrelationIdService, CorrelationIdService>();

            // Build and return the service provider
            return serviceCollection.BuildServiceProvider();
        }
    }
}





using Microsoft.Extensions.DependencyInjection;
using System.Windows;

namespace LogViewer
{
    public partial class App : Application
    {
        private IServiceProvider _serviceProvider;

        protected override void OnStartup(StartupEventArgs e)
        {
            base.OnStartup(e);

            // Configure services
            _serviceProvider = Startup.ConfigureServices();

            // Create the main window and set its DataContext (MVVM)
            var mainWindow = _serviceProvider.GetRequiredService<MainWindow>();
            mainWindow.Show();
        }
    }
}
