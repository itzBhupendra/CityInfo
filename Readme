using System;
using System.Security.Cryptography.X509Certificates;

class Program
{
    static void Main(string[] args)
    {
        // Define the locations to search for certificates
        StoreLocation[] storeLocations = { StoreLocation.CurrentUser, StoreLocation.LocalMachine };

        // Define the store names to search in
        StoreName[] storeNames = {
            StoreName.My,          // Personal certificates
            StoreName.Root,        // Trusted root certificates
            StoreName.AuthRoot,    // Third-party trusted root certificates
            StoreName.CertificateAuthority, // Intermediate certificates
            StoreName.TrustedPeople,
            StoreName.TrustedPublisher,
            StoreName.AddressBook
        };

        // Iterate through each store location
        foreach (var storeLocation in storeLocations)
        {
            Console.WriteLine($"Store Location: {storeLocation}");

            // Iterate through each store name
            foreach (var storeName in storeNames)
            {
                Console.WriteLine($"\nStore Name: {storeName}");

                // Open the store
                using (X509Store store = new X509Store(storeName, storeLocation))
                {
                    try
                    {
                        store.Open(OpenFlags.ReadOnly); // Open in read-only mode

                        // Retrieve all certificates in the store
                        X509Certificate2Collection certificates = store.Certificates;

                        // Check if there are any certificates
                        if (certificates.Count > 0)
                        {
                            // Iterate through and display certificate details
                            foreach (X509Certificate2 cert in certificates)
                            {
                                Console.WriteLine($"  Subject: {cert.Subject}");
                                Console.WriteLine($"  Issuer: {cert.Issuer}");
                                Console.WriteLine($"  Thumbprint: {cert.Thumbprint}");
                                Console.WriteLine($"  Valid From: {cert.NotBefore}");
                                Console.WriteLine($"  Valid To: {cert.NotAfter}");
                                Console.WriteLine();
                            }
                        }
                        else
                        {
                            Console.WriteLine("  No certificates found.");
                        }
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine($"  Error accessing store {storeName} at {storeLocation}: {ex.Message}");
                    }
                    finally
                    {
                        store.Close(); // Close the store after use
                    }
                }
            }
        }
    }
}
