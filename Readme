public class SearchController : ControllerBase
    {
        private readonly string[] logFiles = new[]
        {
            "path/to/api1/log.txt",
            "path/to/api2/log.txt",
            "path/to/api3/log.txt"
        };

        [HttpGet("{correlationId}")]
        public async Task<IActionResult> Get(string correlationId)
        {
            var allLogs = new List<string>();

            // Read all log files and aggregate the lines
            foreach (var logFile in logFiles)
            {
                if (System.IO.File.Exists(logFile))
                {
                    var lines = await System.IO.File.ReadAllLinesAsync(logFile);
                    allLogs.AddRange(lines);
                }
            }

            // Find the first and last occurrence of the Correlation ID
            var firstIndex = allLogs.FindIndex(line => line.Contains(correlationId));
            var lastIndex = allLogs.FindLastIndex(line => line.Contains(correlationId));

            if (firstIndex == -1 || lastIndex == -1)
            {
                return NotFound("Correlation ID not found in logs.");
            }

            // Get all entries between the first and last occurrence
            var resultLogs = allLogs.Skip(firstIndex).Take(lastIndex - firstIndex + 1).ToList();

            return Ok(resultLogs);
        }
