using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Http;
using System;
using System.Threading.Tasks;

public class HeaderValidationMiddleware
{
    private readonly RequestDelegate _next;
    private readonly string[] _requiredHeaders;

    public HeaderValidationMiddleware(RequestDelegate next, string[] requiredHeaders)
    {
        _next = next;
        _requiredHeaders = requiredHeaders;
    }

    public async Task Invoke(HttpContext context)
    {
        foreach (var header in _requiredHeaders)
        {
            if (!context.Request.Headers.ContainsKey(header))
            {
                context.Response.StatusCode = StatusCodes.Status400BadRequest;
                await context.Response.WriteAsync($"Missing required header: {header}");
                return;
            }
        }

        await _next(context);
    }
}

public static class HeaderValidationMiddlewareExtensions
{
    public static IApplicationBuilder UseHeaderValidation(this IApplicationBuilder builder, params string[] requiredHeaders)
    {
        return builder.UseMiddleware<HeaderValidationMiddleware>(requiredHeaders);
    }
}
